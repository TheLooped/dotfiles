#!/bin/bash

last_window_list=""
last_focused_ws=""

check_occupied() {
    local desktop=$1
    local count=$(wmctrl -l | grep " $desktop " | wc -l)
    [ "$count" -gt 0 ]
}

is_focused() {
    focused_ws=$(awk '/^workspaces:/ {sub(/^workspaces: /, ""); gsub(/:\w*/, ""); print }' <(dkcmd status type=full num=1) | grep -oE '\*\S+' | awk -F '*' '{print $2}')

    focused=$(expr $focused_ws - 1)
    echo "$focused"
}

get_window_list() {
    wmctrl -l
}

print_workspaces() {

read -r -a workspace_array <<< "$(awk '/^workspaces:/ {sub(/^workspaces: /, ""); gsub(/:\\w*/, ""); gsub(/\*/, ""); print }' <<< "workspaces: 1 2 3 *4 5 6")"

# Subtract 1 from each element in the array
    for ((i=0; i<${#workspace_array[@]}; i++)); do
    workspace_array[i]=$((workspace_array[i] - 1))
    done
    local buf=""
    local desktops=${workspace_array[@]}
    local focused_desktop=$(is_focused)

    for desktop in $desktops; do
        if [[ "$focused_desktop" == "$desktop" ]]; then
            local ws=$desktop
            local icon="●"
            local class="workspace-focused"
        elif check_occupied "$desktop"; then
            local ws=$desktop
            local icon="●"
            local class="workspace-occupied"
        else
            local ws="$desktop"
            local icon="●"
            local class="workspace-empty"
        fi

        buf+="(eventbox (button :class \"$class\" :onclick \"wmctrl -s $ws && sleep 0.1\" \"$icon\"))"
    done

    echo "(box :orientation \"h\" :class \"works\" :halign \"center\" :space-evenly \"false\" :spacing \"15\" $buf)"
}

# Print workspaces on startup
print_workspaces

# Listen to changes and update workspaces
while :; do
    # Check if the window list has changed
    current_window_list=$(get_window_list)
    if [ "$current_window_list" != "$last_window_list" ]; then
        last_window_list="$current_window_list"
        print_workspaces
    fi

    # Check if the focused workspace has changed
    current_focused_ws=$(is_focused)
    if [ "$current_focused_ws" != "$last_focused_ws" ]; then
        last_focused_ws="$current_focused_ws"
        print_workspaces
    fi
done
